#version 420 core

noperspective in vec2 vTexcoord;
uniform sampler2D buf0;
uniform vec2 frameBufSize;

out vec4 outcolor;

const float FXAA_SPAN_MAX = 8.0;
const float FXAA_REDUCE_MUL = 0.125; //1.0/8.0;
const float FXAA_REDUCE_MIN = 0.0078125; //1.0/128.0;

void main( void ) 
{
    vec3 rgbNW = texture2D(buf0,vTexcoord+(vec2(-1.0,-1.0)/frameBufSize)).xyz;
    vec3 rgbNE = texture2D(buf0,vTexcoord+(vec2(1.0,-1.0)/frameBufSize)).xyz;
    vec3 rgbSW = texture2D(buf0,vTexcoord+(vec2(-1.0,1.0)/frameBufSize)).xyz;
    vec3 rgbSE = texture2D(buf0,vTexcoord+(vec2(1.0,1.0)/frameBufSize)).xyz;
    vec3 rgbM = texture2D(buf0,vTexcoord).xyz;

    vec3 luma=vec3(0.299, 0.587, 0.114);
    float lumaNW = dot(rgbNW, luma);
    float lumaNE = dot(rgbNE, luma);
    float lumaSW = dot(rgbSW, luma);
    float lumaSE = dot(rgbSE, luma);
    float lumaM  = dot(rgbM,  luma);

    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));
    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));

    vec2 dir;
    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));
    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));

    float dirReduce = max(
        (lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL),
        FXAA_REDUCE_MIN);

    float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);

    dir = min(vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),
          max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),
          dir * rcpDirMin)) / frameBufSize;

    vec3 rgbA = 0.5 * (
        texture2D(buf0, vTexcoord.xy + dir * (-0.166666667)).xyz +
        texture2D(buf0, vTexcoord.xy + dir * (0.1666666667)).xyz);
    vec3 rgbB = rgbA * 0.5 + 0.25 * (
        texture2D(buf0, vTexcoord.xy + dir * (-0.5)).xyz +
        texture2D(buf0, vTexcoord.xy + dir * (0.5)).xyz);
    float lumaB = dot(rgbB, luma);

    if((lumaB < lumaMin) || (lumaB > lumaMax))
	{
        outcolor.xyz=rgbA;
    }
	else
	{
        outcolor.xyz=rgbB;
    }

	outcolor.a = 1.0;
}